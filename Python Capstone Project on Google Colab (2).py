# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Uv8wPh4b0-CvXIOiiGd_zQJj_miKnJIB
"""

import random
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import re
import getpass
import os

def generate_otp():
    return random.randint(100000, 999999)

generate_otp()

def validate_email(email):
    # Simple regex for basic email validation
    pattern = r"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
    return re.match(pattern, email)

#sender_email = os.getenv('sender_email')
#sender_password = os.getenv('sender_password')

def send_otp_via_email(receiver_email, otp):
    sender_email = "Sanjiban.Hati@gmail.com"  # Replace with your email
    sender_password = "eyml lznl jpoc irod"

    subject = "Your OTP Code"
    body = f"Your OTP code is {otp}. Please enter this code to verify your email."

    msg = MIMEMultipart()
    msg['From'] = sender_email
    msg['To'] = receiver_email
    msg['Subject'] = subject

    msg.attach(MIMEText(body, 'plain'))

    try:
        # Check if the email is valid
        if not validate_email(receiver_email):
            return "Invalid email address format. Please check the email and try again."

        server = smtplib.SMTP('smtp.gmail.com', 587)
        server.starttls()
        server.login(sender_email, sender_password)
        text = msg.as_string()
        server.sendmail(sender_email, receiver_email, text)
        server.quit()
        print("OTP sent successfully.")
    except smtplib.SMTPRecipientsRefused:
        return "Failed to send OTP. The recipient's email address is invalid."
    except smtplib.SMTPAuthenticationError:
        return "Failed to send OTP. Authentication failed. Check your email credentials."
    except smtplib.SMTPException as e:
        return f"Failed to send OTP. SMTP error: {e}"
    except Exception as e:
        return f"Failed to send OTP. Error: {e}"


send_otp_via_email("Sanjiban.Hati@gmail.com",626637)

def get_user_otp():
    while True:
        otp = input("Enter the OTP you received: ")
        if otp.isdigit() and len(otp) == 6:
            return int(otp)
        else:
            print("Invalid OTP format. Please enter a 6-digit OTP.")
get_user_otp()

def verify_otp(generated_otp, user_otp):
    return generated_otp == user_otp
verify_otp(626637,626637)

def main():
    print("Welcome to the OTP Verification System")

    try:
        email = input("Enter your email address: ")
        otp = generate_otp()
        print(f"Generated OTP for testing: {otp}")

        # Attempt to send OTP via email
        send_otp_via_email(email, otp)

        attempts = 3
        while attempts > 0:
            user_otp = get_user_otp()
            if verify_otp(otp, user_otp):
                print("OTP verified successfully. Access granted.")
                break
            else:
                attempts -= 1
                if attempts > 0:
                    print(f"Incorrect OTP. You have {attempts} attempts left.")
                else:
                    print("Access denied. No attempts left.")

    except Exception as e:
        print(f"An error occurred: {e}")

main()